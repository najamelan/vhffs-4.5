#!/bin/sh -e
# vim:ts=4:sw=4:et:ai:sts=4:filetype=sh
### BEGIN INIT INFO
# Provides:          vhffs-fssync
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: remote synchronous file-copying tool
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
DAEMON_MASTER=/usr/bin/vhffsfssync_master
DAEMON_SLAVE=/usr/bin/vhffsfssync_slave
NAME=vhffs-fssync
DESC="remote synchronous file-copying tool"
PIDPREFIX=/var/run/vhffs-fssync

test -f $DAEMON_MASTER || exit 0
test -f $DAEMON_SLAVE || exit 0

. /lib/lsb/init-functions

# Include defaults if available
if [ -f /etc/default/$NAME ] ; then
        . /etc/default/$NAME
fi

case "$1" in
    start)
        SOMETHING_STARTED=0
        for i in 0 1 2 3 4 5 6 7 8 9; do
            eval name=\$MASTER${i}_NAME
            eval args=\$MASTER${i}_ARGS
            if [ -n "$name" ] && [ -n "$args" ] ; then
                log_daemon_msg "Starting $DESC master $name " "$NAME"
                start-stop-daemon --start --startas $DAEMON_MASTER --oknodo \
                    --pidfile $PIDPREFIX.master-$name.pid -- --pidfile $PIDPREFIX.master-$name.pid $args
                log_end_msg $?
                SOMETHING_STARTED=1
            fi
        done
        for i in 0 1 2 3 4 5 6 7 8 9; do
            eval name=\$SLAVE${i}_NAME
            eval args=\$SLAVE${i}_ARGS
            if [ -n "$name" ] && [ -n "$args" ] ; then
                log_daemon_msg "Starting $DESC slave $name " "$NAME"
                start-stop-daemon --start --startas $DAEMON_SLAVE --oknodo \
                    --pidfile $PIDPREFIX.slave-$name.pid -- --pidfile $PIDPREFIX.slave-$name.pid $args
                log_end_msg $?
                SOMETHING_STARTED=1
            fi
        done
        if [ "$SOMETHING_STARTED" -eq 0 ]; then
            log_failure_msg "$NAME disabled, please adjust the configuration to your needs in /etc/default/$NAME to enable it."
            exit 0
        fi
        ;;
    stop)
	for i in $PIDPREFIX*.pid; do
		test -f "$i" || continue
		log_daemon_msg "Stopping $DESC" "$NAME"
		start-stop-daemon --oknodo --stop --pidfile $i
		log_end_msg $?
		rm -f $i
	done
        ;;
    reload|force-reload|restart)
        $0 stop
        sleep 1;
        $0 start
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|force-reload}" >&2
        exit 1
        ;;
esac
exit 0
